---
import Layout from '../layouts/Layout.astro';
const shopDomain = import.meta.env.PUBLIC_SHOPIFY_STORE_DOMAIN;
---

<Layout title="Your Shopping Cart">
  <style>
      main {
          max-width: 900px;
          margin: auto;
          padding: 2rem;
          color: white;
      }

      h1 {
          font-size: 2.5rem;
          margin-bottom: 2rem;
          text-align: center;
      }

      .cart-items {
          list-style: none;
          padding: 0;
          margin: 0;
          border-top: 1px solid #333;
      }

      .cart-item-link {
          display: block;
          text-decoration: none;
          color: inherit;
      }

      .cart-item {
          display: flex;
          align-items: center;
          gap: 1.5rem;
          padding: 1.5rem;
          border-bottom: 1px solid #333;
      }

      .cart-item-link:hover .item-details {
          text-decoration: underline;
      }

      .cart-item img {
          width: 80px;
          height: 80px;
          object-fit: cover;
          border-radius: 8px;
      }

      .item-details {
          flex-grow: 1;
      }

      .item-title {
          font-size: 1.2rem;
          font-weight: bold;
          margin: 0;
      }

      .item-price {
          color: #a0a0a0;
      }

      .item-quantity {
          display: flex;
          align-items: center;
          gap: 0.5rem;
      }

      .item-quantity label {
          font-size: 0.9rem;
      }

      .quantity-input {
          width: 60px;
          padding: 0.5rem;
          text-align: center;
          border-radius: 4px;
          border: 1px solid #ccc;
          color: white;
      }

      .empty-cart-message {
          text-align: center;
          font-size: 1.2rem;
          padding: 3rem 0;
      }

      .cart-summary {
          margin-top: 2rem;
          padding-top: 1.5rem;
          border-top: 2px solid #555;
          text-align: right;
      }

      .cart-total {
          font-size: 1.5rem;
          font-weight: bold;
          margin-bottom: 1.5rem;
      }

      .cart-total .label {
          color: #a0a0a0;
          font-weight: normal;
          margin-right: 1rem;
      }

      .checkout-button, .clear-cart-button {
          border: none;
          padding: 0.75rem 1.5rem;
          font-size: 1rem;
          font-weight: bold;
          border-radius: 4px;
          cursor: pointer;
          text-decoration: none;
          display: inline-block;
      }

      .clear-cart-button {
          background-color: #555;
          color: white;
      }

      .checkout-button {
          background-color: var(--accent);
          color: white;
          margin-left: 1rem;
      }

      .remove-item-button {
          background-color: #e53e3e;
          color: white;
          border: none;
          padding: 0.5rem;
          font-size: 0.875rem;
          border-radius: 9999px;
          cursor: pointer;
          margin-left: 0.5rem;
          transition: background-color 0.2s;
          width: 2rem;
          height: 2rem;
          display: flex;
          align-items: center;
          justify-content: center;
      }

      .remove-item-button:hover {
          background-color: #c53030;
      }
  </style>

  <main data-shop-domain={shopDomain}>
    <h1>Your Cart</h1>
    <div id="cart-container">
    </div>
    <div
        id="cart-summary-section"
        class="cart-summary"
        style="display: none;"
    >
      <div
          id="cart-total"
          class="cart-total"
      >
        <span class="label">Total:</span>
        <span class="amount">$0.00</span>
      </div>
      <div class="cart-actions">
        <button
            id="clear-cart"
            class="clear-cart-button"
        >Clear Cart
        </button>
        <a
            id="checkout-link"
            href="#"
            class="checkout-button"
        >Proceed to Checkout
        </a>
      </div>
    </div>
  </main>

  <template id="cart-item-template">
    <li class="cart-item">
      <a class="cart-item-link-img">
        <img
            src=""
            alt=""
        />
      </a>
      <div class="item-details">
        <a class="cart-item-link-title">
          <p class="item-title"></p>
        </a>
        <p class="item-price"></p>
      </div>
      <div class="item-quantity">
        <label>Qty:</label>
        <input
            type="number"
            class="quantity-input"
            min="0"
        />
        <button
            type="button"
            class="remove-item-button"
            aria-label="Remove item"
        >
          x
        </button>
      </div>
    </li>
  </template>

  <script>
      import {cart, clearCart, updateItemQuantity} from '../lib/cart-store.js';

      const mainEl = document.querySelector('main');
      const shopDomain = mainEl.dataset.shopDomain;

      const cartContainer = document.getElementById('cart-container');
      const itemTemplate = document.getElementById('cart-item-template');
      const summarySection = document.getElementById('cart-summary-section');
      const totalAmountEl = summarySection.querySelector('.amount');
      const clearCartButton = document.getElementById('clear-cart');
      const checkoutLink = document.getElementById('checkout-link');

      function renderCart(items) {
          cartContainer.innerHTML = '';
          let subtotal = 0;
          let checkoutItems = [];

          if (items.length === 0) {
              cartContainer.innerHTML = '<p class="empty-cart-message">Your cart is empty.</p>';
              summarySection.style.display = 'none';
              return;
          }

          summarySection.style.display = 'block';
          const itemList = document.createElement('ul');
          itemList.className = 'cart-items';

          items.forEach(item => {
              const itemClone = itemTemplate.content.cloneNode(true);
              const imgLink = itemClone.querySelector('a.cart-item-link-img');
              const titleLink = itemClone.querySelector('a.cart-item-link-title');
              const img = itemClone.querySelector('img');
              const quantityInput = itemClone.querySelector('.quantity-input');
              const itemPageUrl = `/parts/${item.handle}`;

              imgLink.href = itemPageUrl;
              titleLink.href = itemPageUrl;
              img.src = item.image;
              img.alt = item.title;
              itemClone.querySelector('.item-title').textContent = item.title;
              itemClone.querySelector('.item-price').textContent = new Intl.NumberFormat('en-US', {
                  style: 'currency',
                  currency: item.currency || 'USD'
              }).format(item.price);

              quantityInput.value = item.quantity;
              quantityInput.dataset.itemId = item.id;

              // Set the item ID for the remove button
              const removeButton = itemClone.querySelector('.remove-item-button');
              removeButton.dataset.itemId = item.id;

              itemList.appendChild(itemClone);

              subtotal += item.price * item.quantity;
              const variantIdNumber = item.id.replace('gid://shopify/ProductVariant/', '');
              checkoutItems.push(`${variantIdNumber}:${item.quantity}`);
          });

          cartContainer.appendChild(itemList);
          totalAmountEl.textContent = new Intl.NumberFormat('en-US', {
              style: 'currency',
              currency: items[0]?.currency || 'USD'
          }).format(subtotal);

          checkoutLink.href = `https://${shopDomain}/cart/${checkoutItems.join(',')}`;
      }

      cartContainer.addEventListener('input', event => {
          if (event.target.classList.contains('quantity-input')) {
              const itemId = event.target.dataset.itemId;
              const newQuantity = parseInt(event.target.value, 10);
              if (!isNaN(newQuantity)) {
                  updateItemQuantity(itemId, newQuantity);
              }
          }
      });

      // Event listener for remove buttons
      cartContainer.addEventListener('click', event => {
          if (event.target.classList.contains('remove-item-button')) {
              const itemId = event.target.dataset.itemId;
              updateItemQuantity(itemId, 0); // Remove item by setting quantity to 0
          }
      });

      clearCartButton.addEventListener('click', () => {
          clearCart();
      });

      cart.subscribe(renderCart);
  </script>
</Layout>
